# scanner.py

import requests
import re
import urllib.parse
from bs4 import BeautifulSoup

class Scanner:

    def __init__(self, url, ignore_links):
        self.session = requests.Session()
        self.target_url = url
        self.target_links = []
        self.links_to_ignore = ignore_links

    def extract_links_from(self, url):
        try:
            response = self.session.get(url)
            return re.findall(b'href="(.*?)"', response.content)
        except requests.exceptions.RequestException as e:
            print(f"[!] Error fetching {url}: {e}")
            return []

    def crawl(self, url=None):
        if url is None:
            url = self.target_url

        links = self.extract_links_from(url)
        for link in links:
            link = urllib.parse.urljoin(url, link.decode('utf-8') if isinstance(link, bytes) else link)
            if "#" in link:
                link = link.split("#")[0]

            if self.target_url in link and link not in self.target_links and link not in self.links_to_ignore:
                self.target_links.append(link)
                print(f"[+] Found: {link}")
                self.crawl(link)

    def extract_forms(self, url):
        try:
            response = self.session.get(url)
            parsed_html = BeautifulSoup(response.content, "html.parser")
            return parsed_html.find_all("form")
        except:
            return []

    def submit_form(self, form, value, url):
        action = form.get("action")
        post_url = urllib.parse.urljoin(url, action)
        method = form.get("method", "get").lower()
        inputs = form.find_all("input")
        data = {}

        for input_field in inputs:
            name = input_field.get("name")
            if name is None:
                continue
            input_type = input_field.get("type", "text")
            input_value = input_field.get("value", "")
            if input_type == "text":
                input_value = value
            data[name] = input_value

        if method == "post":
            return self.session.post(post_url, data=data)
        return self.session.get(post_url, params=data)

    def run_scanner(self):
        for link in self.target_links:
            forms = self.extract_forms(link)
            for form in forms:
                print(f"[+] Testing form on {link}")
                if self.test_xss_in_form(form, link):
                    print(f"\n[!!!] XSS vulnerability discovered in form on {link}")
                    print(f"{form}\n")

            if "=" in link:
                print(f"[+] Testing URL: {link}")
                if self.test_xss_in_link(link):
                    print(f"\n[!!!] XSS vulnerability discovered in URL: {link}\n")

    def test_xss_in_link(self, url):
        xss_script = "<script>alert('xss')</script>"
        test_url = url.replace("=", "=" + xss_script)
        response = self.session.get(test_url)
        return xss_script in response.text

    def test_xss_in_form(self, form, url):
        xss_script = "<script>alert('xss')</script>"
        response = self.submit_form(form, xss_script, url)
        return xss_script in response.text
